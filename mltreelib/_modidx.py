# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/mltreelib',
                'doc_host': 'https://jkapila.github.io',
                'git_url': 'https://github.com/jkapila/mltreelib',
                'lib_path': 'mltreelib'},
  'syms': { 'mltreelib.base.tree': { 'mltreelib.base.tree.BaseDecisionTree': ( '01_APIS/basetree.html#basedecisiontree',
                                                                               'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.BaseDecisionTree.__init__': ( '01_APIS/basetree.html#__init__',
                                                                                        'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.BaseDecisionTree._build_tree': ( '01_APIS/basetree.html#_build_tree',
                                                                                           'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.BaseDecisionTree._validate_params': ( '01_APIS/basetree.html#_validate_params',
                                                                                                'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.BaseDecisionTree.fit': ('01_APIS/basetree.html#fit', 'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.BaseDecisionTree.predict': ( '01_APIS/basetree.html#predict',
                                                                                       'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.BaseDecisionTree.predict_value': ( '01_APIS/basetree.html#predict_value',
                                                                                             'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.BaseDecisionTree.print_tree': ( '01_APIS/basetree.html#print_tree',
                                                                                          'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.C45': ('01_APIS/basetree.html#c45', 'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.C45._calculate_information_gain': ( '01_APIS/basetree.html#_calculate_information_gain',
                                                                                              'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.C45._majority_vote': ( '01_APIS/basetree.html#_majority_vote',
                                                                                 'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.C45.fit': ('01_APIS/basetree.html#fit', 'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.CART': ('01_APIS/basetree.html#cart', 'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.CART._calculate_impurity': ( '01_APIS/basetree.html#_calculate_impurity',
                                                                                       'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.CART._cart_leaf_function': ( '01_APIS/basetree.html#_cart_leaf_function',
                                                                                       'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.CART._cart_node_function': ( '01_APIS/basetree.html#_cart_node_function',
                                                                                       'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.CART.fit': ('01_APIS/basetree.html#fit', 'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.DecisionNode': ('01_APIS/basetree.html#decisionnode', 'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.DecisionNode.__init__': ( '01_APIS/basetree.html#__init__',
                                                                                    'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.DecisionNode.estimate': ( '01_APIS/basetree.html#estimate',
                                                                                    'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.Node': ('01_APIS/basetree.html#node', 'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.Node.__init__': ('01_APIS/basetree.html#__init__', 'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.Node.__str__': ('01_APIS/basetree.html#__str__', 'mltreelib/base/tree.py'),
                                     'mltreelib.base.tree.Node._validate': ('01_APIS/basetree.html#_validate', 'mltreelib/base/tree.py')},
            'mltreelib.core': {'mltreelib.core.foo': ('00_Examples/core.html#foo', 'mltreelib/core.py')},
            'mltreelib.data.data': { 'mltreelib.data.data.Data': ('01_APIS/data.html#data', 'mltreelib/data/data.py'),
                                     'mltreelib.data.data.Data.__init__': ('01_APIS/data.html#__init__', 'mltreelib/data/data.py'),
                                     'mltreelib.data.data.Data.__str__': ('01_APIS/data.html#__str__', 'mltreelib/data/data.py'),
                                     'mltreelib.data.data.Data._process_data': ( '01_APIS/data.html#_process_data',
                                                                                 'mltreelib/data/data.py'),
                                     'mltreelib.data.data.Data._reduce_size': ('01_APIS/data.html#_reduce_size', 'mltreelib/data/data.py'),
                                     'mltreelib.data.data.Data.dtypes': ('01_APIS/data.html#dtypes', 'mltreelib/data/data.py'),
                                     'mltreelib.data.data.Data.shape': ('01_APIS/data.html#shape', 'mltreelib/data/data.py')},
            'mltreelib.data.datasets': { 'mltreelib.data.datasets.get_dataset': ( '01_APIS/datasets.html#get_dataset',
                                                                                  'mltreelib/data/datasets.py'),
                                         'mltreelib.data.datasets.show_data': ( '01_APIS/datasets.html#show_data',
                                                                                'mltreelib/data/datasets.py')},
            'mltreelib.data.utility': { 'mltreelib.data.utility.GroupedVariableTransformation': ( '01_APIS/dataset_utils.html#groupedvariabletransformation',
                                                                                                  'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.GroupedVariableTransformation.__init__': ( '01_APIS/dataset_utils.html#__init__',
                                                                                                           'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.GroupedVariableTransformation.__repr__': ( '01_APIS/dataset_utils.html#__repr__',
                                                                                                           'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.GroupedVariableTransformation.fit': ( '01_APIS/dataset_utils.html#fit',
                                                                                                      'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.GroupedVariableTransformation.inverse_transform': ( '01_APIS/dataset_utils.html#inverse_transform',
                                                                                                                    'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.GroupedVariableTransformation.transform': ( '01_APIS/dataset_utils.html#transform',
                                                                                                            'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper': ( '01_APIS/dataset_utils.html#indexmapper',
                                                                                'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper.__init__': ( '01_APIS/dataset_utils.html#__init__',
                                                                                         'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper._idx_generator': ( '01_APIS/dataset_utils.html#_idx_generator',
                                                                                               'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper._make_index': ( '01_APIS/dataset_utils.html#_make_index',
                                                                                            'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper._replace_code': ( '01_APIS/dataset_utils.html#_replace_code',
                                                                                              'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper._replace_index': ( '01_APIS/dataset_utils.html#_replace_index',
                                                                                               'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper.fit': ( '01_APIS/dataset_utils.html#fit',
                                                                                    'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper.get_all_index': ( '01_APIS/dataset_utils.html#get_all_index',
                                                                                              'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper.get_all_names': ( '01_APIS/dataset_utils.html#get_all_names',
                                                                                              'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper.get_index': ( '01_APIS/dataset_utils.html#get_index',
                                                                                          'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper.get_name': ( '01_APIS/dataset_utils.html#get_name',
                                                                                         'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper.inverse_transform': ( '01_APIS/dataset_utils.html#inverse_transform',
                                                                                                  'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.IndexMapper.transform': ( '01_APIS/dataset_utils.html#transform',
                                                                                          'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.VariableTransformation': ( '01_APIS/dataset_utils.html#variabletransformation',
                                                                                           'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.VariableTransformation.__init__': ( '01_APIS/dataset_utils.html#__init__',
                                                                                                    'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.VariableTransformation.__str__': ( '01_APIS/dataset_utils.html#__str__',
                                                                                                   'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.VariableTransformation.fit': ( '01_APIS/dataset_utils.html#fit',
                                                                                               'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.VariableTransformation.inverse_transform': ( '01_APIS/dataset_utils.html#inverse_transform',
                                                                                                             'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.VariableTransformation.transform': ( '01_APIS/dataset_utils.html#transform',
                                                                                                     'mltreelib/data/utility.py'),
                                        'mltreelib.data.utility.summary_func': ( '01_APIS/dataset_utils.html#summary_func',
                                                                                 'mltreelib/data/utility.py')},
            'mltreelib.tree': { 'mltreelib.tree.CARTRegressionTree': ('01_APIS/trees_impl.html#cartregressiontree', 'mltreelib/tree.py'),
                                'mltreelib.tree.CARTRegressionTree._calculate_variance_reduction': ( '01_APIS/trees_impl.html#_calculate_variance_reduction',
                                                                                                     'mltreelib/tree.py'),
                                'mltreelib.tree.CARTRegressionTree._cart_leaf_function': ( '01_APIS/trees_impl.html#_cart_leaf_function',
                                                                                           'mltreelib/tree.py'),
                                'mltreelib.tree.CARTRegressionTree._cart_node_function': ( '01_APIS/trees_impl.html#_cart_node_function',
                                                                                           'mltreelib/tree.py'),
                                'mltreelib.tree.CARTRegressionTree._mean_of_y': ('01_APIS/trees_impl.html#_mean_of_y', 'mltreelib/tree.py'),
                                'mltreelib.tree.CARTRegressionTree.fit': ('01_APIS/trees_impl.html#fit', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree': ('01_APIS/trees_impl.html#tree', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.__init__': ('01_APIS/trees_impl.html#__init__', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.apply': ('01_APIS/trees_impl.html#apply', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.describe': ('01_APIS/trees_impl.html#describe', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.fit': ('01_APIS/trees_impl.html#fit', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.fit_dataset': ('01_APIS/trees_impl.html#fit_dataset', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.fit_formula': ('01_APIS/trees_impl.html#fit_formula', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.load': ('01_APIS/trees_impl.html#load', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.predict': ('01_APIS/trees_impl.html#predict', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.predict_leaf': ('01_APIS/trees_impl.html#predict_leaf', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.predict_proba': ('01_APIS/trees_impl.html#predict_proba', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.prune': ('01_APIS/trees_impl.html#prune', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.save': ('01_APIS/trees_impl.html#save', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.transform': ('01_APIS/trees_impl.html#transform', 'mltreelib/tree.py')},
            'mltreelib.utils.extras': { 'mltreelib.utils.extras.linear_kernel': ( '01_APIS/util_extras.html#linear_kernel',
                                                                                  'mltreelib/utils/extras.py'),
                                        'mltreelib.utils.extras.polynomial_kernel': ( '01_APIS/util_extras.html#polynomial_kernel',
                                                                                      'mltreelib/utils/extras.py'),
                                        'mltreelib.utils.extras.rbf_kernel': ( '01_APIS/util_extras.html#rbf_kernel',
                                                                               'mltreelib/utils/extras.py')},
            'mltreelib.utils.functions': { 'mltreelib.utils.functions.calculate_correlation_matrix': ( '01_APIS/util_functions.html#calculate_correlation_matrix',
                                                                                                       'mltreelib/utils/functions.py'),
                                           'mltreelib.utils.functions.calculate_covariance_matrix': ( '01_APIS/util_functions.html#calculate_covariance_matrix',
                                                                                                      'mltreelib/utils/functions.py'),
                                           'mltreelib.utils.functions.calculate_entropy': ( '01_APIS/util_functions.html#calculate_entropy',
                                                                                            'mltreelib/utils/functions.py'),
                                           'mltreelib.utils.functions.calculate_gini': ( '01_APIS/util_functions.html#calculate_gini',
                                                                                         'mltreelib/utils/functions.py'),
                                           'mltreelib.utils.functions.calculate_mae': ( '01_APIS/util_functions.html#calculate_mae',
                                                                                        'mltreelib/utils/functions.py'),
                                           'mltreelib.utils.functions.calculate_mse': ( '01_APIS/util_functions.html#calculate_mse',
                                                                                        'mltreelib/utils/functions.py'),
                                           'mltreelib.utils.functions.calculate_rss': ( '01_APIS/util_functions.html#calculate_rss',
                                                                                        'mltreelib/utils/functions.py'),
                                           'mltreelib.utils.functions.calculate_std_dev': ( '01_APIS/util_functions.html#calculate_std_dev',
                                                                                            'mltreelib/utils/functions.py'),
                                           'mltreelib.utils.functions.calculate_variance': ( '01_APIS/util_functions.html#calculate_variance',
                                                                                             'mltreelib/utils/functions.py'),
                                           'mltreelib.utils.functions.divide_on_feature': ( '01_APIS/util_functions.html#divide_on_feature',
                                                                                            'mltreelib/utils/functions.py'),
                                           'mltreelib.utils.functions.euclidean_distance': ( '01_APIS/util_functions.html#euclidean_distance',
                                                                                             'mltreelib/utils/functions.py'),
                                           'mltreelib.utils.functions.get_sorted_cats': ( '01_APIS/util_functions.html#get_sorted_cats',
                                                                                          'mltreelib/utils/functions.py')},
            'mltreelib.utils.metrics': { 'mltreelib.utils.metrics.accuracy_score': ( '01_APIS/util_metrics.html#accuracy_score',
                                                                                     'mltreelib/utils/metrics.py'),
                                         'mltreelib.utils.metrics.mae': ('01_APIS/util_metrics.html#mae', 'mltreelib/utils/metrics.py'),
                                         'mltreelib.utils.metrics.mse': ('01_APIS/util_metrics.html#mse', 'mltreelib/utils/metrics.py')}}}